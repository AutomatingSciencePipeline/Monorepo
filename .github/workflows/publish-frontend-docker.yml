# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Production Frontend Docker image

on:
  push:
    paths:
      - 'apps/frontend/**'
    branches: ['main']

env:
  REGISTRY: gladospipeline
  IMAGE_NAME: glados-frontend

jobs:
  frontend_push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./apps/frontend
          file: ./apps/frontend/frontend.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MONGODB_PORT=${{ secrets.MONGODB_PORT }}
            MONGODB_USERNAME=${{ secrets.MONGODB_USERNAME }}
            MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: "index.docker.io/${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          

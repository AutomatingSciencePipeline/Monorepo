# Usage
#   Start:          docker compose up
#   With helpers:   docker compose -f docker-compose.yml -f ./.devcontainer/docker-compose.dev.yml up
#   Stop:           docker compose down
#   Destroy:        docker compose -f docker-compose.yml -f ./.devcontainer/docker-compose.dev.yml down -v --remove-orphans

version: '3'
name: glados-project

# Make sure you have a .env file in the root of the project, it supplies variables in the ${}

services:
  app-backend:
    build:
      context: ./apps/backend
      dockerfile: ./backend.Dockerfile
      target: production
    container_name: glados-backend
    environment:
      FIREBASE_KEY: ${FIREBASE_KEY}
      BACKEND_PORT: ${BACKEND_PORT}
    volumes:
        - ./apps/backend/ExperimentFiles:/app/ExperimentFiles
    ports:
        # Exposed to the Host : Port inside the container Container https://docs.docker.com/compose/compose-file/compose-file-v3/#ports
        # TODO does this need to be exposed to host?
        - ${BACKEND_PORT}:${BACKEND_PORT}
    expose:
        # Exposed to other containers in the same network https://docs.docker.com/compose/compose-file/compose-file-v3/#expose
        - "${BACKEND_PORT}"

  app-frontend:
    build:
      context: ./apps/frontend
      dockerfile: ./frontend.Dockerfile
      target: runner
    container_name: glados-frontend
    environment:
      FRONTEND_WEBSERVER_PORT: ${FRONTEND_WEBSERVER_PORT}
    working_dir: /app
    ports:
      # Exposed to the Host : Port inside the container Container https://docs.docker.com/compose/compose-file/compose-file-v3/#ports
      - ${FRONTEND_WEBSERVER_PORT}:${FRONTEND_WEBSERVER_PORT}
      - 80:${FRONTEND_WEBSERVER_PORT}
    expose:
      # Exposed to other containers in the same network https://docs.docker.com/compose/compose-file/compose-file-v3/#expose
      - "${FRONTEND_WEBSERVER_PORT}"
      - "80"

  app-mongodb:
    image: mongo
    container_name: glados-mongodb
    environment:
      MONGODB_PORT: ${MONGODB_PORT}
    expose:
      - "${MONGODB_PORT}"
    volumes:
      - ./data/db:/data/db
networks:
  default:
    driver: bridge
    name: glados-bridge

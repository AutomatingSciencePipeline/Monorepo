{
    // =========================== General =========================
    // Spellcheck forcefully allowed words
    "cSpell.words": [
        "appspot",
        "configfile",
        "consts",
        "dotenv",
        "eqcm",
        "firestore",
        "frange",
        "glados",
        "gladosbase",
        "headlessui",
        "hyperparameters",
        "hyperparams",
        "jsonify",
        "mantine",
        "matplotlib",
        "mouck",
        "paramspos",
        "pipenv",
        "Pyenv",
        "pyplot",
        "pytest",
        "rawfiletype",
        "signin",
        "tabler",
        "tlds",
        "Vmmem",
        "yapf",
        "ZSVUVA"
    ],
    // Spellcheck forcefully flagged words (please explain why)
    "cSpell.flagWords": [
        "Dependent", // in our context, we are always referring to the Dependant Variable
    ],
    "shellcheck.exclude": [
        "1017" // Turn off shellcheck warnings about line ending types because git is set to autoconvert
    ],
    // Needed for some of the VSCode tasks to work correctly, and because our scripts are written in bash
    "terminal.integrated.defaultProfile.windows": "Git Bash",

    // ======================= Backend =============================

    // Tell the Python vscode extension to look at the venv's python install before any found on the system
    // https://github.com/microsoft/vscode-python/wiki/Setting-descriptions#pythondefaultinterpreterpath
    "python.defaultInterpreterPath": ".\\apps\\backend\\.venv\\Scripts\\python.exe",
    // Tell the Pylint extension to look for its rules file off of this folder instead of the repo root
    "python.linting.cwd": "${workspaceFolder}/apps/backend",
    // Tell the Python extension to also follow imports from inside the backend directory, so that the auto-suggested imports don't drill down from the repo root folder
    "python.analysis.extraPaths": [
        "./apps/backend"
    ],
    "python.analysis.typeCheckingMode": "basic",
    "python.formatting.provider": "yapf",
    // Default line length settings often causes it to split logging messages over multiple lines
    "python.formatting.yapfArgs": ["--style", "{based_on_style: pep8, column_limit: 999}"],
    "python.linting.lintOnSave": true,
    
    // From the past team (unclear if they are still needed)
    "python.testing.pytestArgs": [
        "apps"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true

    // ======================= Frontend =============================

    // Below this point is uncategorized (please categorize)
}